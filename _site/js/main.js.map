{"version":3,"sources":["global_util.js","display.js","dom_elements.js","fontscale.js","game_logic.js","inputs_handler.js","save_file.js","word_generator.js"],"names":["reload","window","location","removeSuccessiveDuplicates","array","result","i","length","push","timestamp","Math","floor","Date","now","titleCase","string","toUpperCase","slice","toLowerCase","display","this","modify","superclass","getContentProperty","element","nodeName","replaceElementContent","content","getElementContent","toggleAttribute","attribute","getAttribute","removeAttribute","setAttribute","toggleDrawer","elements","list","input","drawer","replaceOrGetContent","undefined","updateReadout","obj","current_level","save_file","get","current_score","level","textReadoutScore","textReadoutHighscore","highscore","textReadoutLevel","textReadoutLevelinfo","info","counter","read","parseInt","text","count","innerHTML","toggleTheme","a","document","body","getReferenceItem","number","ms_array","join","getMenuItem","level_num","s","state","selectMenuItem","override","current","querySelector","select","firstChild","next","getMenuList","getReferenceList","updateReferenceList","reference","updateMenuList","textSelect","triggerElementGlow","color","style","transition","boxShadow","setTimeout","goodGlow","main","badGlow","__generateSpecifics","lvl","path","valid","nodeType","e","console","error","index","Function","init","__s","mainsection","tabmenu","container","levels","readout","settings","generator","score","levelinfo","button","skip","theme","reset","localdb","filechooser","messages","word","output","item","fontScale","querySelectorAll","wordWrap","recalculate","addWrapper","recalculateElement","eh","offsetHeight","ew","offsetWidth","ph","getNominalHeight","pw","getNominalWidth","height_ratio","max","width_ratio","scaleHeight","scaleWidth","ratio","fontSize","parentElement","mh","Infinity","min","mw","classList","game","generateWord","generateNum","textMain","__generateNumFromFormat","format","groups","split","digit_range","__generateDigitGroup","range","single_digit","break_probability","round","random","checkNum","num","letters","__wordToLetters","possible_num","ms","indexOf","__letterToNums","__matchPossibleNum","exploded","trim","multi","letter","nums","exploded_num","addTimestamp","updateScore","times","level_i","__calculateScore","set","MAX_PAST","scaler","timelen","pastinterval","timediff","wpm","0","1","2","3","4","5","6","7","8","9","getTime","inputs","themeListener","generatorListener","Wordgenerator","getWord","generatorNumber","generatorOutput","drawerListener","checked","skipListener","resetListener","log","detail","levelSelectListener","clicked","target","new_level","inputMain","mainInputListener","keyCode","check","addEventListener","__appdata__","storage_key","current_stage","expert_scale","master_scale","drawer_open","dark_theme","pass","10","save","localStorage","setItem","JSON","stringify","load","parse","getItem","key","value","removeItem","WordGenerator","dbUrl","dbUuid","databaseError","databaseLoaded","httpRequest","XMLHttpRequest","requestDatabase","localStorage_db","onDatabaseGet","isOffline","requestLocalFile","ajaxMakeRequest","onDatabaseError","req","url","success","failure","open","send","readyState","response","call","DONE","status","readLocalFile","preventDefault","stopPropagation","file","files","reader","FileReader","onload","evt","db","inputLocaldbMessages","err","readAsText","href","msg","Error","warn","getWordFromNum","working_set","random_index"],"mappings":"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","file":"main.js","sourcesContent":["\r\nvar ms_array = {\r\n    0: ['s', 'c', 'z', 'x'],\r\n    1: ['d', 't', 'th'],\r\n    2: ['n'],\r\n    3: ['m'],\r\n    4: ['r'],\r\n    5: ['l'],\r\n    6: ['ch', 'sh', 'j', 'g'],\r\n    7: ['c', 'g', 'ch', 'q', 'k', 'ng', 'ck'],\r\n    8: ['f', 'ph', 'v'],\r\n    9: ['b', 'p'],\r\n    valid: ['s', 'c', 'z', 'x', 'q', 'd', 't', 'th', 'n', 'm', 'r', 'l', 'ch', 'ck', 'sh', 'ph', 'j', 'g', 'k', 'ng', 'f', 'v', 'b', 'p'],\r\n    multi: ['ch', 'ck', 'sh', 'th', 'ng', 'ph']\r\n}\r\n\r\nfunction reload() {\r\n    window.location.reload();\r\n}\r\n\r\nfunction removeSuccessiveDuplicates(array){\r\n    var result = []\r\n    for (var i = 0; i < array.length; i++) {\r\n        if(array[i-1] != array[i]){\r\n            result.push(array[i]);\r\n        }\r\n    };\r\n    return result\r\n}\r\n\r\nfunction timestamp(){\r\n    return Math.floor(Date.now() / 1)\r\n}\r\n\r\n// Shim for unsupporting browsers\r\nif (!Date.now) {\r\n    Date.now = function() { return new Date().getTime(); }\r\n}\r\n\r\nfunction titleCase(string){\r\n    if (!string) { return \"\"; }\r\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\r\n}","\r\nvar display = new (function() {\r\n    // This will store the specific elements when generated on init\r\n    this.modify = {};\r\n    this.modify.superclass = this; // Context fix :/\r\n\r\n    this.getContentProperty = function(element){\r\n        if (element.nodeName == \"INPUT\") {\r\n            return 'value'\r\n        } else {\r\n            return 'innerHTML'\r\n        }\r\n    }\r\n\r\n    this.replaceElementContent = function(element, content) {\r\n        element[this.getContentProperty(element)] = content;\r\n    }\r\n\r\n    this.getElementContent = function(element) {\r\n        return element[this.getContentProperty(element)];\r\n    }\r\n\r\n    this.toggleAttribute = function(element, attribute) {\r\n        if (element.getAttribute(attribute) !== null) {\r\n            element.removeAttribute(attribute);\r\n        } else {\r\n            element.setAttribute(attribute, '');\r\n        }\r\n    }\r\n\r\n    this.toggleDrawer = function() {\r\n        this.toggleAttribute(elements.list.input.drawer, 'checked')\r\n    }\r\n\r\n    this.replaceOrGetContent = function(element, content) {\r\n        if (content === undefined){\r\n            return this.getElementContent(element);\r\n        } else {\r\n            this.replaceElementContent(element, content);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    this.updateReadout = function(){\r\n        var obj = {\r\n            current_level: save_file.get('current_level'),\r\n            current_score: save_file.get('current_score')\r\n        }\r\n        obj.level = save_file.get('levels')[obj.current_level];\r\n\r\n        this.modify.textReadoutScore(obj.current_score)\r\n        this.modify.textReadoutHighscore( obj.level.highscore)\r\n        this.modify.textReadoutLevel(\"Level \" + obj.current_level)\r\n        this.modify.textReadoutLevelinfo(obj.level.info)\r\n        return true;\r\n    }\r\n\r\n    this.counter = function() {\r\n        var read = parseInt(elements.list.text.count.innerHTML) || 0;\r\n        elements.list.text.count.innerHTML = read + 1;\r\n    }\r\n\r\n    this.toggleTheme = function() {\r\n        var a = document.body.getAttribute('dark');\r\n        if(a == false || a == undefined){\r\n            document.body.setAttribute('dark', true)\r\n        } else {\r\n            document.body.removeAttribute('dark');\r\n        }\r\n    }\r\n\r\n    this.getReferenceItem = function(number) {\r\n        return ms_array[number].join(\", \") || \"?\";\r\n    }\r\n\r\n    this.getMenuItem = function(level_num) {\r\n        var obj = save_file.get('levels')[level_num], s;\r\n        if (save_file.get('current_level') == level_num){\r\n            s = \"selected\";\r\n        } else {\r\n            s = \"\";\r\n        }\r\n\r\n        return \"<li \" + s + \" levelnum='\" + level_num + \"'><h4>Level \" + level_num + \"<span>\" + obj.highscore + \"</span></h4>\\n<small>\" + obj.info + \"</small><span progression=\\\"\" + obj.state() + \"\\\"></span></li>\\n\";\r\n    }\r\n\r\n    this.selectMenuItem = function(level_num, override){\r\n        // If these were separate, would have to pass them around in an object and probably save which one?? (maybe just init)\r\n        var current = document.querySelector('li[selected]') || elements.list.text.select.firstChild,\r\n            next = document.querySelector('li[levelnum=\"' + level_num + '\"]');\r\n\r\n        if ((current == next || !next) && !override) {\r\n            return false\r\n        } else {\r\n            current.removeAttribute('selected');\r\n            next.setAttribute('selected', '');\r\n            return true\r\n        };\r\n    }\r\n\r\n    this.getMenuList = function() {\r\n        var obj = save_file.get('levels'),\r\n            list = \"\";\r\n\r\n        for (i in obj) {\r\n            list += this.getMenuItem(i);\r\n        }\r\n        return list\r\n    }\r\n\r\n    this.getReferenceList = function() {\r\n        var list = \"\";\r\n        for (var i = 0; i <= 9; i++) {\r\n            list += \"<tr><td>\" + i + \"</td> <td>\" + this.getReferenceItem(i) + \"</td></tr>\";\r\n        };\r\n        return list;\r\n    }\r\n\r\n    this.updateReferenceList = function() {\r\n        this.modify.reference(this.getReferenceList());\r\n    }\r\n    this.updateMenuList = function() {\r\n        this.modify.textSelect(this.getMenuList());\r\n    }\r\n\r\n\r\n    /* Notification / Feedback system */\r\n    this.triggerElementGlow = function(element, color){\r\n        if (!color) { return false; }\r\n\r\n        // Ultra Jank Animation of some properties\r\n\r\n        element.style.transition = 'none';\r\n        element.style.boxShadow = '0 0 0.5em ' + color + ' inset';\r\n        setTimeout(function(){\r\n            element.style.transition = \"all 2s\";\r\n        }, 20);\r\n        setTimeout(function(){\r\n            element.style.boxShadow = '';\r\n        }, 40);\r\n        return true;\r\n    }\r\n    this.goodGlow = function(){\r\n        this.triggerElementGlow(elements.list.input.main, \"#3A8900\");\r\n    };\r\n    this.badGlow = function(){\r\n        this.triggerElementGlow(elements.list.input.main, \"#B31500\");\r\n    };\r\n\r\n\r\n    /* Element specifics are auto-generated on init */\r\n    this.__generateSpecifics = function(obj, lvl, path) {\r\n        obj = obj || elements.list;\r\n        lvl = lvl || 1;\r\n        path = path || \"\";\r\n        if (lvl > 10) { return false; }\r\n\r\n        for (i in obj) {\r\n            try {\r\n                var valid = obj[i].nodeType;\r\n            } catch(e) {\r\n                console.error(\"Element selector problem:\", i, e);\r\n            }\r\n            if (valid !== undefined) {\r\n                var index = (path) ? titleCase(i) : i;\r\n                this.modify[path + index] = new Function('content', 'return this.superclass.replaceOrGetContent(this.' + path + index + '__element, content);');\r\n                this.modify[path + index + \"__element\"] = obj[i];\r\n            } else {\r\n                this.__generateSpecifics(obj[i], lvl + 1, (lvl > 1) ? path + titleCase(i) : path + i);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    this.init = function(){\r\n        this.__generateSpecifics()\r\n        if ( save_file.get('dark_theme') ) { this.toggleTheme() }\r\n        if ( save_file.get('drawer_open') ) { this.toggleDrawer() }\r\n        this.updateMenuList();\r\n        this.updateReferenceList();\r\n        this.updateReadout();\r\n        this.selectMenuItem(save_file.get('current_level'), true);\r\n    }\r\n})();","var elements = new (function() {\r\n    this.__s = { // __selectors - not really meant to be used by programmers\r\n        mainsection: \".maincolumn .main\",\r\n        tabmenu: {\r\n            container: \"#drawer .tab-container\",\r\n            levels: {\r\n                container: \"#drawer .tab-container .tab-panel#tab-1 .levelscolumn\",\r\n                readout: \"#drawer .tab-container .tab-panel#tab-1 .levelscolumn .readout\",\r\n                select: \"#drawer .tab-container .tab-panel#tab-1 .levelscolumn .select\",\r\n                settings: \"#drawer .tab-container .tab-panel#tab-1 .settings\"\r\n            },\r\n            generator: {\r\n                container: \"#drawer .tab-container .tab-panel#tab-2 .generatorscolumn\",\r\n            },\r\n            reference:{\r\n                container: \"#drawer .tab-container .tab-panel#tab-3 .referencecolumn\",\r\n            }\r\n        }\r\n    }\r\n\r\n    this.list = {\r\n        text: {\r\n            main: this.__s.mainsection + \" p.generated\",\r\n            readout: {\r\n                container: this.__s.tabmenu.levels.readout,\r\n                score: this.__s.tabmenu.levels.readout + \" .score\",\r\n                highscore: this.__s.tabmenu.levels.readout + \" .highscore\",\r\n                level: this.__s.tabmenu.levels.readout + \" .level\",\r\n                levelinfo: this.__s.tabmenu.levels.readout + \" .levelinfo\"\r\n            },\r\n            select: this.__s.tabmenu.levels.container + \" .select ul\",\r\n            count: this.__s.mainsection + \" .numbar span.count\"\r\n        },\r\n        button: {\r\n            skip: this.__s.mainsection + \" .numbar a.skip\",\r\n            theme: this.__s.tabmenu.levels.settings + \" input[name=theme]\",\r\n            reset: this.__s.tabmenu.levels.settings + \" input[name=reset]\"\r\n        },\r\n        input: {\r\n            main: this.__s.mainsection + \" input[name=main_input]\",\r\n            drawer: \"input[type=checkbox]#drawer-toggle\",\r\n            localdb: {\r\n                filechooser: this.__s.tabmenu.generator.container + \" input[type=file].submit_db\",\r\n                messages: this.__s.tabmenu.generator.container + \" p.submit_db\"\r\n            }\r\n        },\r\n        reference: this.__s.tabmenu.reference.container + \" table tbody\",\r\n        generator: {\r\n            container: this.__s.tabmenu.generator.container,\r\n            word: this.__s.tabmenu.generator.container + \" .inputs button\",\r\n            number: this.__s.tabmenu.generator.container + \" .inputs input[type=number]\",\r\n            output: this.__s.tabmenu.generator.container + \" span.generated_word\"\r\n        }\r\n    }\r\n\r\n    /* INIT ROUTINE */\r\n    this.init = function(obj, lvl){\r\n        obj = obj || this.list;\r\n        lvl = lvl || 1;\r\n        if (lvl > 10) {return false} // Recursion limiter - something has gone pretty wrong.\r\n\r\n\r\n        for (item in obj){\r\n            if (typeof(obj[item]) == \"string\") {\r\n                obj[item] = document.querySelector(obj[item]);\r\n            } else if (typeof(obj[item]) == \"object\") {\r\n                this.init(obj[item], lvl + 1)\r\n            }\r\n        }\r\n    }\r\n})();","\r\nvar fontScale = new (function(){\r\n\r\n    this.init = function(){\r\n        this.elements = document.querySelectorAll(\"[fs-min-width], [fs-max-width], [fs]\");\r\n\r\n        for (var i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].style.wordWrap = 'none';\r\n        };\r\n        this.recalculate();\r\n    }\r\n\r\n    this.recalculate = function(){\r\n        for (var a = 0; a < this.elements.length; a++) {\r\n            this.addWrapper(this.elements[a]);\r\n            this.recalculateElement(this.elements[a].firstChild);\r\n        };\r\n        console.info(\"Fontscale: Recalculated font size.\")\r\n    }\r\n\r\n    this.recalculateElement = function(element){\r\n        var eh = element.offsetHeight,\r\n            ew = element.offsetWidth,\r\n            ph = this.getNominalHeight(element),\r\n            pw = this.getNominalWidth(element),\r\n            height_ratio = Math.max(ph/eh, 0.01),\r\n            width_ratio  = Math.max(pw/ew, 0.01);\r\n        if (height_ratio < width_ratio) {\r\n            this.scaleHeight(element, height_ratio);\r\n        } else {\r\n            this.scaleWidth(element, width_ratio);\r\n        }\r\n    }\r\n\r\n    this.scaleHeight = function(element, ratio){\r\n        element.style.fontSize = ratio*100 + \"%\";\r\n    }\r\n\r\n    this.scaleWidth = function(element, ratio){\r\n        element.style.fontSize = ratio*100 + \"%\";\r\n    }\r\n\r\n    this.getNominalHeight = function(element){\r\n        var ph = element.parentElement.offsetHeight,\r\n            mh = element.parentElement.getAttribute('fs-max-height')/100 * ph || Infinity;\r\n\r\n        return Math.min(ph, mh);\r\n    }\r\n\r\n    this.getNominalWidth = function(element){\r\n        var pw = element.parentElement.offsetWidth,\r\n            mw = element.parentElement.getAttribute('fs-max-width')/100 * pw || Infinity;\r\n\r\n        return Math.min(pw, mw);\r\n    }\r\n\r\n    this.addWrapper = function (element){\r\n        if (!element.firstChild.classList) {\r\n            element.innerHTML = \"<span class='fontscale'>\" + element.innerHTML + \"</span>\";\r\n        }\r\n    }\r\n});","var game = new (function(){\r\n\r\n\r\n    this.generateWord = 'bung';\r\n    this.generateNum = function() {\r\n        display.modify.textMain(this.__generateNumFromFormat(save_file.get('levels')[save_file.get('current_level')].format));\r\n    }\r\n\r\n    this.__generateNumFromFormat = function(format){\r\n        format = format || \"2-12\"\r\n        var groups = format.split('|');\r\n        var result = [];\r\n\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var digit_range = groups[i].split('-');\r\n            result[i] = this.__generateDigitGroup(digit_range);\r\n        };\r\n\r\n        return result.join(' ');\r\n    }\r\n    this.__generateDigitGroup = function(range) {\r\n        var single_digit, result = \"\";\r\n        if (!range[1]) { range[1] = range[0]; }\r\n        var break_probability = 1 / (range[1] - range[0] + 1);\r\n\r\n        for (var i = 1; i <= range[1]; i++) {\r\n            single_digit = Math.round(Math.random()*9);\r\n            result += single_digit;\r\n            if (i >= range[0] && Math.random() <= break_probability) {\r\n                break;\r\n            };\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n    this.checkNum = function(num, word) {\r\n        letters = this.__wordToLetters(word);\r\n        var possible_num = [];\r\n        for (var i = 0; i < letters.length; i++) {\r\n            if ( this.ms.valid.indexOf(letters[i]) < 0 ) { continue; }\r\n            possible_num.push(game.__letterToNums(letters[i]));\r\n        };\r\n        return this.__matchPossibleNum(num, possible_num);\r\n    }\r\n\r\n    this.__wordToLetters = function(word) {\r\n        exploded = removeSuccessiveDuplicates(word.trim().toLowerCase().split(''));\r\n        var letters = [],\r\n            index;\r\n\r\n        for (var i = 0; i < exploded.length; i++) {\r\n            index = this.ms.multi.indexOf(exploded[i] + exploded[i + 1]);\r\n            if (index >= 0) {\r\n                letters.push(this.ms.multi[index]);\r\n                i++ // Skip the already-processed letter\r\n            } else {\r\n                letters.push(exploded[i])\r\n            }\r\n        };\r\n\r\n        return letters\r\n    }\r\n    this.__letterToNums = function(letter) {\r\n        nums = [];\r\n        for (i in this.ms) {\r\n            if (i >= 0 && this.ms[i].indexOf(letter) >= 0) {\r\n                nums.push(i);\r\n            }\r\n        };\r\n        return nums;\r\n    }\r\n    this.__matchPossibleNum = function(num, possible_num){\r\n        exploded_num = num.split('');\r\n        if (exploded_num.length != possible_num.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < exploded_num.length; i++) {\r\n            if (possible_num[i].indexOf(exploded_num[i]) < 0){\r\n                return false\r\n            }\r\n        };\r\n        return true;\r\n    }\r\n\r\n    this.addTimestamp = function(){\r\n        save_file.get('times').push(timestamp());\r\n    }\r\n\r\n    this.updateScore = function(){\r\n        var obj = {\r\n            current_score: save_file.get('current_score'),\r\n            levels: save_file.get('levels'),\r\n            times: save_file.get('times')\r\n        };\r\n        var level_i = save_file.get('current_level');\r\n        obj.current_score = this.__calculateScore(obj)\r\n        // Set high score if current is higher\r\n        if (obj.current_score > obj.levels[level_i].highscore){\r\n            obj.levels[level_i].highscore = obj.current_score;\r\n        }\r\n        save_file.set(obj);\r\n    }\r\n\r\n    this.__calculateScore = function(obj) {\r\n        var MAX_PAST = 4;\r\n        var scaler = display.modify.textMain().length,\r\n            timelen = obj.times.length,\r\n            pastinterval = Math.max(Math.min(MAX_PAST, timelen), 1),\r\n            timediff = (obj.times[timelen-1] - obj.times[timelen-pastinterval]) / 1000,\r\n            wpm = Math.round(Math.min(Math.max((60)/(timediff/pastinterval), 1), 300));\r\n\r\n        if (timelen > MAX_PAST){\r\n            obj.times = obj.times.slice(-5);\r\n        }\r\n\r\n        if (pastinterval <= 2){\r\n            return 10;\r\n        }\r\n        return Math.max(Math.round(wpm*scaler), 0);\r\n    }\r\n\r\n    this.init = function(){\r\n        this.ms = ms_array;\r\n        this.generateNum();\r\n    }\r\n})();","var inputs = new (function(){\r\n    this.themeListener = function(){\r\n        save_file.set('dark_theme', !save_file.get('dark_theme'));\r\n        display.toggleTheme();\r\n    }\r\n\r\n    this.generatorListener = function(e){\r\n        var word = Wordgenerator.getWord(display.modify.generatorNumber());\r\n        display.modify.generatorOutput(word);\r\n    }\r\n\r\n    this.drawerListener = function(e){\r\n        var state = elements.list.input.drawer.checked;\r\n        if (state) {\r\n            save_file.set('drawer_open', true);\r\n        } else {\r\n            save_file.set('drawer_open', false);\r\n        }\r\n    }\r\n\r\n    this.skipListener = function(e){\r\n        game.generateNum();\r\n    }\r\n\r\n    this.resetListener = function(e){\r\n        console.log(e)\r\n        if (e.detail >= 2) {\r\n            save_file.reset();\r\n            reload();\r\n        }\r\n    }\r\n\r\n    this.levelSelectListener = function(e) {\r\n        var clicked, target = e.target;\r\n\r\n        for (var i = 0; i < 3; i++) {\r\n            if (target.nodeName == \"LI\"){\r\n                clicked = target;\r\n                break\r\n            } else {\r\n                target = target.parentElement;\r\n            }\r\n        }\r\n        if (!clicked) { return false; }\r\n\r\n        var new_level = clicked.getAttribute('levelnum');\r\n        if (display.selectMenuItem(new_level)) {\r\n            save_file.set({\r\n                current_score: 0,\r\n                current_level: new_level\r\n            });\r\n            save_file.set('times', [])\r\n            display.modify.inputMain('');\r\n            game.generateNum();\r\n            display.updateReadout();\r\n            fontScale.recalculate();\r\n        }\r\n    }\r\n\r\n    this.mainInputListener = function(e){\r\n        if (e.keyCode == 13) {\r\n            var check = display.replaceOrGetContent(elements.list.text.main.firstChild) || display.modify.textMain();\r\n            if (game.checkNum(check, display.modify.inputMain())){\r\n                display.modify.inputMain('');\r\n                display.goodGlow();\r\n                display.counter();\r\n\r\n                game.generateNum();\r\n                game.addTimestamp();\r\n                game.updateScore();\r\n\r\n                display.updateReadout();\r\n                display.updateMenuList();\r\n                fontScale.recalculate();\r\n            } else {\r\n                display.badGlow();\r\n            }\r\n        }\r\n    }\r\n\r\n    this.init = function(){\r\n        elements.list.button.theme.addEventListener('click', this.themeListener);\r\n        elements.list.button.reset.addEventListener('click', this.resetListener);\r\n        elements.list.button.skip.addEventListener('click', this.skipListener);\r\n\r\n        elements.list.text.select.addEventListener('click', this.levelSelectListener);\r\n        elements.list.input.main.addEventListener('keyup', this.mainInputListener);\r\n\r\n        elements.list.generator.word.addEventListener('click', this.generatorListener);\r\n        elements.list.input.drawer.addEventListener('click', this.drawerListener);\r\n    }\r\n})();","\r\nvar save_file = new (function() {\r\n    // This is the data that gets saved between game states. Functions for manipulating are in save_file.\r\n    this.__appdata__ = {\r\n        storage_key: \"major_training_242e9989-ffa2-48b6-8f46-4b7dfc6c590a\",\r\n        current_stage: 1,\r\n        current_level: 1,\r\n        current_score: 0,\r\n        expert_scale: 30,\r\n        master_scale: 50,\r\n        drawer_open: false,\r\n        times: [timestamp()],\r\n        dark_theme: false,\r\n\r\n        levels: {\r\n            1: {\r\n                format: \"2\",\r\n                info: \"2 digit numbers only\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            2: {\r\n                format: \"3\",\r\n                info: \"3 digit numbers only\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            3: {\r\n                format: \"2-3\",\r\n                info: \"2 and 3 digit numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            4: {\r\n                format: \"3|3\",\r\n                info: \"2 groups of 3 digit numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            5: {\r\n                format: \"4\",\r\n                info: \"4 digit numbers only\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            6: {\r\n                format: \"2-4|2-4\",\r\n                info: \"2 groups of 2-4 digit numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            7: {\r\n                format: \"2-3|2-3|2-3|2-3\",\r\n                info: \"4 groups of 2-3 digit numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            8: {\r\n                format: \"4|3|3\",\r\n                info: \"Phone numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            9: {\r\n                format: \"5|5|5|5|5\",\r\n                info: \"Credit card numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            },\r\n            10: {\r\n                format: \"40\",\r\n                info: \"40 digit mega numbers\",\r\n                highscore: 0,\r\n                pass: 75\r\n            }\r\n        },\r\n    }\r\n\r\n    this.save = function() {\r\n        console.log(\"Saving:\", this.__appdata__);\r\n        window.localStorage.setItem(this.__appdata__.storage_key, JSON.stringify(this.__appdata__));\r\n    }\r\n\r\n    this.load = function() {\r\n        var read = JSON.parse(window.localStorage.getItem(this.__appdata__.storage_key));\r\n        if (typeof(read) == \"object\" && read !== null) {\r\n            this.__appdata__ = read;\r\n        } else {\r\n            this.save();\r\n        }\r\n    }\r\n    this.get = function(key) {\r\n        return (this.__appdata__[key] === undefined) ? false : this.__appdata__[key];\r\n    }\r\n    this.set = function(key, value) {\r\n        if (typeof(key) == 'object' && !value) {\r\n            for (i in key){\r\n                this.__appdata__[i] = key[i]\r\n            }\r\n        } else {\r\n            this.__appdata__[key] = value;\r\n        }\r\n        this.save();\r\n    }\r\n    this.reset = function(){\r\n        window.localStorage.removeItem(this.__appdata__.storage_key);\r\n    }\r\n\r\n    this.init = function(){\r\n        this.load();\r\n        var a = this.__appdata__.levels;\r\n        for (i in a){\r\n            a[i].state = function(){\r\n                if (this.highscore >= (this.pass + save_file.get(\"master_scale\"))) {\r\n                    return 4\r\n                } else if (this.highscore >= (this.pass + save_file.get(\"expert_scale\"))) {\r\n                    return 3\r\n                } else if (this.highscore >= this.pass) {\r\n                    return 2\r\n                };\r\n                switch (this.highscore) {\r\n                    case 0:\r\n                        return 0\r\n                    default:\r\n                        return 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n})();","/*\r\n\r\n    Pull in a database or use a webservice to generate a word\r\n    for a number in the MajMonic system.\r\n\r\n*/\r\n\r\n\r\nvar WordGenerator = new (function() {\r\n    // this.serviceUrl = \"http://majorsystem.com/generator\"; // NEED TO ADD FALLBACK TO THIS\r\n    this.dbUrl = \"./database/major_database.json\";\r\n    this.dbUuid = \"MajorTrainingDatabase-60b02baf-b5cf-4851-ad39-1644bd5dd5ec\";\r\n    this.databaseError = false;\r\n    this.databaseLoaded = false;\r\n\r\n    this.httpRequest = new XMLHttpRequest();\r\n\r\n\r\n    this.requestDatabase = function(){\r\n        var localStorage_db = window.localStorage.getItem(this.dbUuid);\r\n        try {\r\n            if (localStorage_db) {\r\n                this.onDatabaseGet(JSON.parse(localStorage_db), \"Loaded from localstorage! B)\");\r\n            } else if (this.isOffline()) {\r\n                this.requestLocalFile();\r\n            } else {\r\n                this.ajaxMakeRequest(this.httpRequest, this.dbUrl, this.onDatabaseGet, this.onDatabaseError);\r\n            }\r\n        } catch(e) {\r\n            window.localStorage.removeItem(this.dbUuid);\r\n        }\r\n    }\r\n\r\n    this.ajaxMakeRequest = function(req, url, success, failure) {\r\n        req.superclass = this; // HACK for Context\r\n        req.open('GET', url);\r\n        req.send();\r\n        if (req.readyState === 4 && req.response === \"\"){\r\n            failure.call(req.superclass, \"AJAX Request could not be made (probably because offline?)\");\r\n            return false;\r\n        }\r\n\r\n        req.addEventListener('readystatechange', function(){\r\n            if (this.readyState === XMLHttpRequest.DONE) {\r\n                if (this.status === 200) {\r\n                    return success.call(this.superclass, JSON.parse(this.response), \"Had to get it from server :/\") || true;\r\n                } else {\r\n                    return failure.call(this.superclass, this) || false;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    this.requestLocalFile = function(){\r\n        elements.list.input.localdb.filechooser.style.display = \"block\";\r\n        elements.list.input.localdb.messages.style.display = \"block\";\r\n        elements.list.input.localdb.filechooser.superclass = this; // HACK for Context\r\n        elements.list.input.localdb.filechooser.addEventListener('change', this.readLocalFile)\r\n    }\r\n\r\n    this.readLocalFile = function(e) {\r\n        if (!e) {return false}\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        var file = e.target.files[0] || null\r\n        if (!file) {return false}\r\n\r\n        var reader = new FileReader();\r\n        reader.superclass = this.superclass; // HACK for Context\r\n        reader.onload = function(evt){\r\n            try {\r\n                var db = JSON.parse(reader.result);\r\n                this.superclass.onDatabaseGet(db, \"Loaded from local file! \\\\(^.^)/\");\r\n                display.modify.inputLocaldbMessages(\"Thank you! (^.^)\");\r\n                elements.list.input.localdb.filechooser.style.display = \"none\";\r\n            } catch(err) {\r\n                display.modify.inputLocaldbMessages(\"<b>Sorry - I don't know that that is :(</b><br> Try again maybe? It should be the \\\"major_database.json\\\" file.\");\r\n                this.superclass.onDatabaseError(\"Could not parse local file as JSON\");\r\n            }\r\n        }\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    this.isOffline = function(){\r\n        return (window.location.href.indexOf(\"file:///\") >= 0) || false\r\n    }\r\n\r\n    this.onDatabaseGet = function(db, msg){\r\n        msg = msg || \"\";\r\n        try {\r\n            this.db = db;\r\n            if (typeof(this.db) === \"object\"){\r\n                window.localStorage.setItem(this.dbUuid, JSON.stringify(this.db));\r\n                console.info(\"Generator database is up and running!\", msg)\r\n                this.databaseLoaded = true;\r\n            } else {\r\n                throw(Error(\"Generator database not retreived as object\"))\r\n            }\r\n        } catch(e) {\r\n            this.onDatabaseError(e);\r\n        }\r\n    }\r\n\r\n    this.onDatabaseError = function(msg){\r\n        msg = msg || \"\";\r\n        this.databaseError = true;\r\n        console.warn(\"WordGenerator: Sorry, the generator is broken :/\\n\", msg);\r\n    }\r\n\r\n\r\n    this.getWordFromNum = function(num) {\r\n        if (this.databaseLoaded && this.db[num]) {\r\n            var working_set = this.db[num];\r\n            var random_index = Math.round(Math.random() * (working_set.length - 1));\r\n            return titleCase(working_set[random_index]) || \"<i>Error occurred :(</i>\";\r\n        } else {\r\n            if (this.databaseError) {\r\n                return \"<i>Sorry, it's broken :(</i>\"\r\n            } else if (this.databaseLoaded) {\r\n                return \"<i>No word found</i>\"\r\n            } else {\r\n                return \"<i>Still loading database...</i>\"\r\n            }\r\n        }\r\n    }\r\n    this.getWord = this.getWordFromNum;\r\n\r\n\r\n    this.init = function() {\r\n        this.requestDatabase();\r\n    }\r\n})();"],"sourceRoot":"/source/"}